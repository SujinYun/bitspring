/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-08-31 02:30:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bit.com.a.model.CalendarDto;
import java.util.Calendar;

public final class calupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("bit.com.a.model.CalendarDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


Calendar cal = Calendar.getInstance();
cal.set(Calendar.DATE, 1);

int tyear = cal.get(Calendar.YEAR);
int tmonth = cal.get(Calendar.MONTH) + 1;
int tday = cal.get(Calendar.DATE);
int thour = cal.get(Calendar.HOUR_OF_DAY);
int tmin = cal.get(Calendar.MINUTE);

String year = request.getParameter("year");
String month = request.getParameter("month");
String day = request.getParameter("day");

	// 마지막 날짜
int lastDay = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
System.out.println("lastDay= " + lastDay);

 

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Calwrite.jsp</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("table{\r\n");
      out.write("\tborder: groove;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("table.type01{\r\n");
      out.write("    border-spacing: 0;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    line-height: 1.0;\r\n");
      out.write("    border-top: 1px solid #ccc;\r\n");
      out.write("    border-left: 1px solid #ccc;\r\n");
      out.write("  \tmargin : 20px 10px;\r\n");
      out.write("}\r\n");
      out.write("table.type01 th{\r\n");
      out.write("\t    /* width: 150px; */\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    border-right: 1px solid #ccc;\r\n");
      out.write("    border-bottom: 1px solid #ccc;\r\n");
      out.write("    border-top: 1px solid #fff;\r\n");
      out.write("    border-left: 1px solid #fff;\r\n");
      out.write("    background: #eee;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("table.type01 td{\r\n");
      out.write("    /* width: 350px; */\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    border-right: 1px solid #ccc;\r\n");
      out.write("    border-bottom: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write("body{\r\n");
      out.write("\tfont-family: Times New Roman;\r\n");
      out.write("}\r\n");
      out.write("._addBtn{\r\n");
      out.write("\tpadding: 10px\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" id=\"frm\">\r\n");
      out.write("<input type=\"hidden\" name=\"seq\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${calDto.seq }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<table border=\"1\" class=\"type01\">\r\n");
      out.write("\r\n");
      out.write("<col width=\"50\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th align=\"center\">ID</th>\r\n");
      out.write("\t<td style=\"padding-left: 10px\">\r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${calDto.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t</td>\t\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th align=\"center\">Title</th>\r\n");
      out.write("\t<td style=\"padding-left: 10px\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"title\" id=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${calDto.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t</td>\t\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th>content</th>\r\n");
      out.write("\t<td style=\"padding-left: 10px; padding-right: 10px\">\r\n");
      out.write("\t\t<textarea rows=\"10\" cols=\"50\" name=\"content\" id=\"content\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${calDto.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t</td>\t\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"취소\" id=\"cancel\" style=\"background-color: #F6F6F6;\">\r\n");
      out.write("<input type=\"button\" value=\"수정\" style=\"background-color: #F6F6F6;\" id=\"_updateBtn\">\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t$(\"#cancel\").click(function() {\r\n");
      out.write("\t\tlocation.href=\"calendar.jsp\";\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#_updateBtn\").click(function() {\r\n");
      out.write("\t\tif($(\"#title\").val().trim() == \"\" ){\r\n");
      out.write("\t\t\talert(\"제목을 입력해주세요.\");\r\n");
      out.write("\t\t\t$(\"#title\").focus();\r\n");
      out.write("\t\t\t// 커서가 id칸에 맞춰짐\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if($(\"#content\").val().trim() == \"\"){\r\n");
      out.write("\t\t\talert(\"내용을 입력해주세요.\");\r\n");
      out.write("\t\t\t$(\"#content\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\t$(\"#frm\").attr(\"action\", \"calupdateAf.do\").submit();\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t// 날짜설정\r\n");
      out.write("//\tsetDay();\r\n");
      out.write("\t\r\n");
      out.write("\t// select가 바뀔때마다 setDay를 호출 (달마다 28,30,31일을 바꿔주기 위해)\r\n");
      out.write("\t$(\"select[name='month']\").change(setDay);\r\n");
      out.write("});\r\n");
      out.write("function setDay() {\r\n");
      out.write("\t// 년도, 월을 통해서 마지막 날짜를 구한다.\r\n");
      out.write("\tvar year = $(\"select[name='year']\").val() + \"\";\r\n");
      out.write("\tvar month = $(\"select[name='month']\").val() + \"\";\r\n");
      out.write("\r\n");
      out.write("\tvar lastday = (new Date(year, month, 0)).getDate();\r\n");
      out.write("\talert(lastday);\r\n");
      out.write("\t\r\n");
      out.write("\t/* 위 코드를 합친 것\r\n");
      out.write("\tvar lastday = (new Date($(\"select[name='year']\").val() + \"\",\r\n");
      out.write("\t\t\t\t\t$(\"select[name='month']\").val() + \"\", 0)).getData();\r\n");
      out.write("\t */\r\n");
      out.write("\t\r\n");
      out.write("\t // select에 날짜적용\r\n");
      out.write("\t var str = \"\";\r\n");
      out.write("\t for(i=1; i<=lastday; i++){\r\n");
      out.write("\t\t str += \"<option value='\" + i + \"'>\" + i + \"</option>\";\r\n");
      out.write("\t }\r\n");
      out.write("\t \r\n");
      out.write("\t $(\"select[name='day']\").html(str);\r\n");
      out.write("\t \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
